jdk.ThreadDump {
  startTime = 06:52:21.785
  result = "2024-05-12 07:52:21
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a385e0, length=24, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000121954000, 0x0000000146942000, 0x0000000145cd3000,
0x0000000121955000, 0x0000000145cd7800, 0x0000000145cd8800, 0x000000014626c000,
0x0000000145cdd800, 0x0000000121822000, 0x0000000146271000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=1.34s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=1.33s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=1.33s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=1.33s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=1.33s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=191.71ms elapsed=1.33s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=237.97ms elapsed=1.33s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=1.33s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=1.31s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=1.28s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.56ms elapsed=1.18s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=4.87ms elapsed=1.03s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=1.00s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-1" #19 prio=5 os_prio=31 cpu=0.91ms elapsed=0.87s tid=0x0000000121954000 nid=0x6b03 waiting on condition  [0x0000000318a36000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-2" #20 prio=5 os_prio=31 cpu=0.52ms elapsed=0.87s tid=0x0000000146942000 nid=0xa803 waiting on condition  [0x0000000318c42000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=0.87s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=0.87s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-5" #23 prio=5 os_prio=31 cpu=0.25ms elapsed=0.87s tid=0x0000000145cd7800 nid=0x8403 waiting on condition  [0x0000000319266000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-6" #24 prio=5 os_prio=31 cpu=0.17ms elapsed=0.87s tid=0x0000000145cd8800 nid=0x8603 waiting on condition  [0x0000000319472000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-7" #25 prio=5 os_prio=31 cpu=0.08ms elapsed=0.87s tid=0x000000014626c000 nid=0xa003 waiting on condition  [0x000000031967e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-8" #26 prio=5 os_prio=31 cpu=0.14ms elapsed=0.87s tid=0x0000000145cdd800 nid=0x9f03 waiting on condition  [0x000000031988a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-9" #27 prio=5 os_prio=31 cpu=0.07ms elapsed=0.87s tid=0x0000000121822000 nid=0x8b03 waiting on condition  [0x0000000319a96000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.22ms elapsed=0.87s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=0.19s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=31.54ms elapsed=1.34s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=1.36ms elapsed=1.34s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=1.34s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=1.34s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=1.34s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.20ms elapsed=1.34s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=0.49ms elapsed=1.28s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 34, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:22.804
  result = "2024-05-12 07:52:22
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a25600, length=23, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000146942000, 0x0000000145cd3000, 0x0000000121955000,
0x0000000145cd7800, 0x0000000145cd8800, 0x000000014626c000, 0x0000000145cdd800,
0x0000000121822000, 0x0000000146271000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=2.36s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=2.35s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=2.35s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=2.35s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=2.35s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=193.14ms elapsed=2.35s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=238.68ms elapsed=2.35s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=2.35s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=2.33s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=2.30s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.56ms elapsed=2.20s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=9.75ms elapsed=2.05s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=2.02s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-2" #20 prio=5 os_prio=31 cpu=0.99ms elapsed=1.90s tid=0x0000000146942000 nid=0xa803 waiting on condition  [0x0000000318c42000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=1.90s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=1.90s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-5" #23 prio=5 os_prio=31 cpu=0.25ms elapsed=1.90s tid=0x0000000145cd7800 nid=0x8403 waiting on condition  [0x0000000319266000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-6" #24 prio=5 os_prio=31 cpu=0.17ms elapsed=1.90s tid=0x0000000145cd8800 nid=0x8603 waiting on condition  [0x0000000319472000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-7" #25 prio=5 os_prio=31 cpu=0.08ms elapsed=1.90s tid=0x000000014626c000 nid=0xa003 waiting on condition  [0x000000031967e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-8" #26 prio=5 os_prio=31 cpu=0.14ms elapsed=1.90s tid=0x0000000145cdd800 nid=0x9f03 waiting on condition  [0x000000031988a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-9" #27 prio=5 os_prio=31 cpu=0.07ms elapsed=1.90s tid=0x0000000121822000 nid=0x8b03 waiting on condition  [0x0000000319a96000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.22ms elapsed=1.90s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=1.22s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=32.57ms elapsed=2.37s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=1.45ms elapsed=2.38s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=2.38s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=2.38s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=2.38s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.25ms elapsed=2.38s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=0.96ms elapsed=2.31s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:23.809
  result = "2024-05-12 07:52:23
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a3d0e0, length=22, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000145cd3000, 0x0000000121955000, 0x0000000145cd7800,
0x0000000145cd8800, 0x000000014626c000, 0x0000000145cdd800, 0x0000000121822000,
0x0000000146271000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=3.37s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=3.36s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=3.36s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=3.35s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=3.35s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.00ms elapsed=3.35s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=241.81ms elapsed=3.35s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=3.35s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=3.33s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=3.31s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.57ms elapsed=3.21s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=14.92ms elapsed=3.06s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=3.02s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=2.90s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=2.90s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-5" #23 prio=5 os_prio=31 cpu=0.25ms elapsed=2.90s tid=0x0000000145cd7800 nid=0x8403 waiting on condition  [0x0000000319266000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-6" #24 prio=5 os_prio=31 cpu=1.27ms elapsed=2.90s tid=0x0000000145cd8800 nid=0x8603 waiting on condition  [0x0000000319472000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-7" #25 prio=5 os_prio=31 cpu=0.08ms elapsed=2.90s tid=0x000000014626c000 nid=0xa003 waiting on condition  [0x000000031967e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-8" #26 prio=5 os_prio=31 cpu=0.14ms elapsed=2.90s tid=0x0000000145cdd800 nid=0x9f03 waiting on condition  [0x000000031988a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-9" #27 prio=5 os_prio=31 cpu=0.07ms elapsed=2.90s tid=0x0000000121822000 nid=0x8b03 waiting on condition  [0x0000000319a96000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.22ms elapsed=2.90s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=2.21s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=33.43ms elapsed=3.36s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=1.57ms elapsed=3.37s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=3.37s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=3.37s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=3.37s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.35ms elapsed=3.37s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=1.50ms elapsed=3.31s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:24.810
  result = "2024-05-12 07:52:24
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a3d140, length=21, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000145cd3000, 0x0000000121955000, 0x0000000145cd7800,
0x000000014626c000, 0x0000000145cdd800, 0x0000000121822000, 0x0000000146271000,
0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=4.37s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=4.36s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=4.36s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=4.35s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=4.35s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.02ms elapsed=4.35s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=243.70ms elapsed=4.35s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=4.35s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=4.33s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=4.31s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.57ms elapsed=4.21s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=20.32ms elapsed=4.06s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=4.03s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=3.90s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=3.90s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-5" #23 prio=5 os_prio=31 cpu=1.42ms elapsed=3.90s tid=0x0000000145cd7800 nid=0x8403 waiting on condition  [0x0000000319266000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-7" #25 prio=5 os_prio=31 cpu=0.08ms elapsed=3.90s tid=0x000000014626c000 nid=0xa003 waiting on condition  [0x000000031967e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-8" #26 prio=5 os_prio=31 cpu=0.14ms elapsed=3.90s tid=0x0000000145cdd800 nid=0x9f03 waiting on condition  [0x000000031988a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-9" #27 prio=5 os_prio=31 cpu=0.07ms elapsed=3.90s tid=0x0000000121822000 nid=0x8b03 waiting on condition  [0x0000000319a96000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.22ms elapsed=3.90s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=3.21s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=34.33ms elapsed=4.36s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=1.74ms elapsed=4.37s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=4.37s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=4.37s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=4.37s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.51ms elapsed=4.37s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=1.96ms elapsed=4.31s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:25.810
  result = "2024-05-12 07:52:25
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a38de0, length=20, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000145cd3000, 0x0000000121955000, 0x000000014626c000,
0x0000000145cdd800, 0x0000000121822000, 0x0000000146271000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=5.37s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=5.36s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=5.36s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=5.35s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=5.35s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.09ms elapsed=5.35s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=246.57ms elapsed=5.35s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=5.35s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=5.33s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=5.31s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.57ms elapsed=5.21s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=25.57ms elapsed=5.06s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=5.03s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=4.90s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=4.90s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-7" #25 prio=5 os_prio=31 cpu=0.76ms elapsed=4.90s tid=0x000000014626c000 nid=0xa003 waiting on condition  [0x000000031967e000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-8" #26 prio=5 os_prio=31 cpu=0.14ms elapsed=4.90s tid=0x0000000145cdd800 nid=0x9f03 waiting on condition  [0x000000031988a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-9" #27 prio=5 os_prio=31 cpu=0.07ms elapsed=4.90s tid=0x0000000121822000 nid=0x8b03 waiting on condition  [0x0000000319a96000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.22ms elapsed=4.90s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=4.21s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=35.02ms elapsed=5.36s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=1.85ms elapsed=5.37s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=5.37s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=5.37s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=5.37s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.58ms elapsed=5.37s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=2.77ms elapsed=5.31s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:26.819
  result = "2024-05-12 07:52:26
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a3d260, length=19, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000145cd3000, 0x0000000121955000, 0x0000000145cdd800,
0x0000000121822000, 0x0000000146271000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=6.38s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=6.37s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=6.37s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=6.36s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=6.36s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.16ms elapsed=6.36s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=250.15ms elapsed=6.36s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=6.36s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=6.34s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=6.32s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.57ms elapsed=6.22s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=30.52ms elapsed=6.07s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=6.03s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=5.91s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=5.91s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-8" #26 prio=5 os_prio=31 cpu=1.20ms elapsed=5.91s tid=0x0000000145cdd800 nid=0x9f03 waiting on condition  [0x000000031988a000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-9" #27 prio=5 os_prio=31 cpu=0.07ms elapsed=5.91s tid=0x0000000121822000 nid=0x8b03 waiting on condition  [0x0000000319a96000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.22ms elapsed=5.91s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=5.22s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=35.79ms elapsed=6.37s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=1.96ms elapsed=6.38s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=6.38s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=6.38s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=6.38s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.68ms elapsed=6.38s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=3.26ms elapsed=6.32s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:27.823
  result = "2024-05-12 07:52:27
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a38f80, length=18, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000145cd3000, 0x0000000121955000, 0x0000000121822000,
0x0000000146271000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=7.38s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=7.37s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=7.37s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=7.37s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=7.37s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.20ms elapsed=7.37s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=251.69ms elapsed=7.36s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=7.36s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=7.35s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=7.32s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.58ms elapsed=7.22s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=35.42ms elapsed=7.07s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=7.04s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=6.91s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=6.91s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-9" #27 prio=5 os_prio=31 cpu=0.98ms elapsed=6.91s tid=0x0000000121822000 nid=0x8b03 waiting on condition  [0x0000000319a96000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.22ms elapsed=6.91s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=6.22s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=36.51ms elapsed=7.38s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=2.07ms elapsed=7.38s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=7.38s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=7.38s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=7.38s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.84ms elapsed=7.38s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=3.63ms elapsed=7.32s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:28.825
  result = "2024-05-12 07:52:28
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a2d960, length=17, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000145cd3000, 0x0000000121955000, 0x0000000146271000,
0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=8.38s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=8.37s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=8.37s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=8.37s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=8.37s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.23ms elapsed=8.37s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=252.15ms elapsed=8.37s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=8.37s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=8.35s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=8.32s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.58ms elapsed=8.22s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=39.37ms elapsed=8.07s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=8.04s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=0.28ms elapsed=7.91s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=7.91s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-10" #28 prio=5 os_prio=31 cpu=0.78ms elapsed=7.91s tid=0x0000000146271000 nid=0x8d03 waiting on condition  [0x0000000319ca2000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=7.23s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=37.07ms elapsed=8.38s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=2.15ms elapsed=8.38s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=8.38s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=8.38s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=8.38s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=0.95ms elapsed=8.38s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=4.09ms elapsed=8.32s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:29.840
  result = "2024-05-12 07:52:29
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a3d360, length=16, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000145cd3000, 0x0000000121955000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=9.40s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=9.39s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=9.39s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=9.38s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=9.38s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.28ms elapsed=9.38s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=252.97ms elapsed=9.38s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=9.38s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=9.37s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=9.34s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.58ms elapsed=9.24s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=43.34ms elapsed=9.09s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=9.06s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-3" #21 prio=5 os_prio=31 cpu=1.23ms elapsed=8.93s tid=0x0000000145cd3000 nid=0xa603 waiting on condition  [0x0000000318e4e000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=0.20ms elapsed=8.93s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003ff83d670> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:980)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:1288)
	at java.util.concurrent.locks.ReentrantLock.tryLock(java.base@11.0.12/ReentrantLock.java:424)
	at io.github.dotslash.Main.useTryLock(Main.java:42)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=8.24s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=37.63ms elapsed=9.39s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=2.25ms elapsed=9.40s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=9.40s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=9.40s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=9.40s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=1.03ms elapsed=9.40s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=4.53ms elapsed=9.34s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

jdk.ThreadDump {
  startTime = 06:52:30.842
  result = "2024-05-12 07:52:30
Full thread dump OpenJDK 64-Bit Server VM (11.0.12+7-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x0000600003a38fa0, length=15, elements={
0x0000000145808800, 0x000000014597c000, 0x000000014300d800, 0x0000000145993000,
0x0000000146054800, 0x0000000146052000, 0x0000000121820000, 0x0000000121821000,
0x0000000145014800, 0x0000000143085000, 0x0000000145a4f800, 0x0000000143809000,
0x00000001438a5000, 0x0000000121955000, 0x000000014401b000
}

"main" #1 prio=5 os_prio=31 cpu=309.43ms elapsed=10.40s tid=0x0000000145808800 nid=0x2803 waiting on condition  [0x000000016d97a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at jdk.internal.misc.Unsafe.park(java.base@11.0.12/Native Method)
	- parking to wait for  <0x00000003fe67a888> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(java.base@11.0.12/LockSupport.java:234)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@11.0.12/AbstractQueuedSynchronizer.java:2123)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@11.0.12/ThreadPoolExecutor.java:1454)
	at io.github.dotslash.Main.runProgram(Main.java:103)
	at io.github.dotslash.Main.runProgramWithJFR(Main.java:63)
	at io.github.dotslash.Main.main(Main.java:77)

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.04ms elapsed=10.39s tid=0x000000014597c000 nid=0x4203 waiting on condition  [0x000000017e7ce000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.12/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.12/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.12/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.13ms elapsed=10.39s tid=0x000000014300d800 nid=0x4303 in Object.wait()  [0x000000017e9da000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc09008> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.12/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.31ms elapsed=10.38s tid=0x0000000145993000 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.03ms elapsed=10.38s tid=0x0000000146054800 nid=0x7e03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 cpu=194.31ms elapsed=10.38s tid=0x0000000146052000 nid=0x7b03 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=254.02ms elapsed=10.38s tid=0x0000000121820000 nid=0x7903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.04ms elapsed=10.38s tid=0x0000000121821000 nid=0x7703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.09ms elapsed=10.37s tid=0x0000000145014800 nid=0x5c03 in Object.wait()  [0x000000017f73a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.12/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x00000003ffc79cb0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.12/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.12/InnocuousThread.java:134)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=11.10ms elapsed=10.34s tid=0x0000000143085000 nid=0x6003 runnable  [0x000000017fb52000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(java.base@11.0.12/Native Method)
	at java.net.SocketInputStream.socketRead(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at java.net.SocketInputStream.read(java.base@11.0.12/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.12/StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.12/StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(java.base@11.0.12/StreamDecoder.java:178)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@11.0.12/InputStreamReader.java:181)
	at java.io.BufferedReader.fill(java.base@11.0.12/BufferedReader.java:161)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:326)
	- locked <0x00000003fffe9d58> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@11.0.12/BufferedReader.java:392)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:49)

"JFR Recorder Thread" #14 daemon prio=5 os_prio=31 cpu=0.58ms elapsed=10.24s tid=0x0000000145a4f800 nid=0x7303 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #15 daemon prio=5 os_prio=31 cpu=48.59ms elapsed=10.09s tid=0x0000000143809000 nid=0x6803 waiting on condition  [0x0000000318412000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@11.0.12/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@11.0.12/RequestEngine.java:68)
	at jdk.jfr.internal.RequestEngine.run_requests(jdk.jfr@11.0.12/RequestEngine.java:230)
	at jdk.jfr.internal.RequestEngine.doPeriodic(jdk.jfr@11.0.12/RequestEngine.java:183)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@11.0.12/PlatformRecorder.java:447)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@11.0.12/PlatformRecorder.java:392)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$78/0x000000080012d840.run(jdk.jfr@11.0.12/Unknown Source)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"JFR Recording Scheduler" #18 daemon prio=5 os_prio=31 cpu=0.13ms elapsed=10.06s tid=0x00000001438a5000 nid=0x6903 in Object.wait()  [0x000000031882a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.12/Native Method)
	- waiting on <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.lang.Object.wait(java.base@11.0.12/Object.java:328)
	at java.util.TimerThread.mainLoop(java.base@11.0.12/Timer.java:527)
	- waiting to re-lock in wait() <0x00000003feae1e60> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@11.0.12/Timer.java:506)

"pool-1-thread-4" #22 prio=5 os_prio=31 cpu=1.27ms elapsed=9.93s tid=0x0000000121955000 nid=0xa403 waiting on condition  [0x000000031905a000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(java.base@11.0.12/Native Method)
	at io.github.dotslash.Main.work(Main.java:21)
	at io.github.dotslash.Main.useTryLock(Main.java:48)
	at io.github.dotslash.Main.lambda$runProgram$0(Main.java:89)
	at io.github.dotslash.Main$$Lambda$96/0x000000080014f840.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11.0.12/ThreadPoolExecutor.java:1128)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11.0.12/ThreadPoolExecutor.java:628)
	at java.lang.Thread.run(java.base@11.0.12/Thread.java:829)

"Attach Listener" #29 daemon prio=9 os_prio=31 cpu=11.49ms elapsed=9.24s tid=0x000000014401b000 nid=0x5f07 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=37.97ms elapsed=10.39s tid=0x000000012181f800 nid=0x5303 runnable  

"GC Thread#0" os_prio=31 cpu=2.34ms elapsed=10.40s tid=0x0000000145818000 nid=0x2c03 runnable  

"G1 Main Marker" os_prio=31 cpu=0.11ms elapsed=10.40s tid=0x000000014584e000 nid=0x2e03 runnable  

"G1 Conc#0" os_prio=31 cpu=0.02ms elapsed=10.40s tid=0x000000014584e800 nid=0x3803 runnable  

"G1 Refine#0" os_prio=31 cpu=0.12ms elapsed=10.40s tid=0x0000000145973800 nid=0x3703 runnable  

"G1 Young RemSet Sampling" os_prio=31 cpu=1.12ms elapsed=10.40s tid=0x0000000145974000 nid=0x3503 runnable  
"VM Periodic Task Thread" os_prio=31 cpu=4.89ms elapsed=10.34s tid=0x0000000145a4b000 nid=0x6103 waiting on condition  

JNI global refs: 35, weak refs: 2

"
}

